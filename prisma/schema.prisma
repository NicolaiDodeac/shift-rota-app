// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  // We'll set this to auth.uid() after login
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  settings       Settings?
  shiftInstances ShiftInstance[]
  weekLedgers    WeekLedger[]
}

model Settings {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tz                String   @default("Europe/London")
  contractYearStart DateTime @default(dbgenerated("(CURRENT_DATE AT TIME ZONE 'UTC')::date"))
  employmentStart   DateTime @default(dbgenerated("(CURRENT_DATE AT TIME ZONE 'UTC')::date"))
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ShiftInstance {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sourceKey    String   // Google Calendar event ID
  calendarId   String   // Google Calendar ID
  tz           String   // Timezone of the shift
  startUTC     DateTime
  endUTC       DateTime
  scheduledMin Int      // Duration in minutes
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, sourceKey])
}

model WeekLedger {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  weekStartUTC DateTime
  weekEndUTC   DateTime
  scheduledMin Int      // Total scheduled minutes for the week
  basicMin     Int      // Basic hours worked (up to contract)
  overtimeMin  Int      // Overtime hours worked
  bankedMin    Int      // Total minutes banked (basic + overtime)
  confirmed    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, weekStartUTC])
}
